//СТРОКИ 
// ________________________________________________________________________________________________________
//Обработка строк
//Написать программу, которая проверяет, является ли веденная с клавиатуры строка целым числом.

#include <locale.h>
#include <iostream>

using namespace std;

int main() {

    setlocale(LC_ALL, "Russian");

    char str[100];
    bool isNumber = true; // Флаг для проверки, является ли строка числом

    cout << "Введите строку: ";
    cin.getline(str, 100); // Считывание строки с пробелами

    int i = 0;

    // Проверка наличия знака (+/-) в начале строки
    if (str[i] == '+' || str[i] == '-') {
        i++; // Пропускаем знак, если он есть
    }

    // Проверка, что после знака есть хотя бы одна цифра
    if (str[i] == '\0') { // Если сразу конец строки
        isNumber = false;  // Это не число
    }

    // Проверка остальных символов строки
    while (str[i] != '\0') { // Пока не конец строки
        if (str[i] < '0' || str[i] > '9') { // Если символ не цифра
            isNumber = false; // Это не число
            break;           // Прерываем проверку
        }
        i++; // Переходим к следующему символу
    }

    if (isNumber) {
        cout << "Это целое число" << endl;
    }
    else {
        cout << "Это НЕ целое число" << endl;
    }

    return 0;
}


//_________________________________________________________________________________________________________________________
//Обработка строк 2
//Даны натуральное число n, строка символов s1, s2, … sn.

#include <iostream>
#include <string>
#include <locale.h>

using namespace std;

int main() {

    setlocale(LC_ALL, "Russian");

    int n;
    cout << "Введите длину строки n: ";
    cin >> n;

    // Очищаем буфер ввода после чтения числа
    cin.ignore(); // Это важно, чтобы следующий getline() работал корректно

    string s; // Строка для ввода
    cout << "Введите строку из " << n << " символов: ";
    getline(cin, s); // Считываем всю строку (с пробелами)

    // Проверяем соответствие длины строки заданному n
    if (s.length() != n) {
        cout << "Ошибка: введенная строка не соответствует длине " << n << endl;
        return 1;
    }

    int count = 0; // Счетчик букв 'x'
    // Перебираем все символы строки
    for (char c : s) {
        // Проверяем как строчные, так и заглавные 'x'
        if (c == 'x' || c == 'X') {
            count++;
        }
    }

    cout << "Буква 'x' встречается " << count << " раз(а)" << endl;

    return 0;
}


//_________________________________________________________________________________________________________________________
//Обработка строк 4
//Даны натуральное число n, строка символов s1, s2, … sn среди которых есть двоеточие.
//Получить все символы после первого двоеточия.

#include <iostream>
#include <string>
#include <locale.h>

using namespace std;

int main() {

    setlocale(LC_ALL, "Russian");

    int n;
    cout << "Введите длину строки n: ";
    cin >> n;

    cin.ignore();  // Очистка буфера после ввода числа

    string s;
    cout << "Введите строку из " << n << " символов (содержащую двоеточие): ";
    getline(cin, s);  // Ввод строки с пробелами


    if (s.length() != n) {
        cout << "Ошибка: введенная строка не соответствует длине " << n << endl;
        return 1;
    }

    // Поиск позиции первого двоеточия
    size_t colon_pos = s.find(':');

    // Проверка наличия двоеточия
    if (colon_pos == string::npos) {  // npos - специальное значение "не найдено"
        cout << "Ошибка: в строке нет двоеточия!" << endl;
        return 1;  // Завершение с ошибкой
    }

    // Извлечение подстроки после двоеточия
    string result = s.substr(colon_pos + 1);

    cout << "Символы после первого двоеточия: " << result << endl;

    return 0;
}


//_________________________________________________________________________________________________________________________
//Обработка строк 5
//Даны натуральное число n, строка символов s1, s2, … sn
//Заменить в последовательности каждую группу символов child на группу символов children.

#include <iostream>
#include <string>
#include <locale.h>

using namespace std;

int main() {

    setlocale(LC_ALL, "Russian");

    int n;

    cout << "Введите длину строки n: ";
    cin >> n;

    cin.ignore();  // Очистка буфера ввода после чтения числа

    string s;
    cout << "Введите строку из " << n << " символов: ";
    getline(cin, s);


    if (s.length() != n) {
        cout << "Ошибка: введенная строка не соответствует длине " << n << endl;
        return 1;
    }

    size_t pos = 0;  // Позиция для поиска подстроки
    const string oldStr = "child";    // Подстрока для замены
    const string newStr = "children"; // Новая подстрока

    // Поиск и замена всех вхождений "child" на "children"
    while ((pos = s.find(oldStr, pos)) != string::npos) {
        s.replace(pos, oldStr.length(), newStr);  // Замена подстроки
        pos += newStr.length();  // Перемещение позиции после замены
        n = s.length();  // Обновление длины строки после замены
    }

    cout << "Результат: " << s << endl;
    cout << "Новая длина строки: " << s.length() << endl;

    return 0;
}


//_________________________________________________________________________________________________________________________
//Обработка строк 7
//Даны натуральное число n, строка символов s1, s2, … sn среди которых есть хотя бы одна точка.
//Удалить из строки все запятые, предшествующие первой точке.Вывести исходную и полученную строки.

#include <iostream>
#include <string>
#include <locale.h>

using namespace std;

int main() {

    setlocale(LC_ALL, "Russian");

    int n;


    cout << "Введите длину строки n: ";
    while (!(cin >> n) || n <= 0) {  // Проверка на число и положительность
        cout << "Ошибка! Введите натуральное число: ";
        cin.clear();  // Сброс флагов ошибок
        cin.ignore(10000, '\n');  // Очистка буфера ввода
    }

    cin.ignore();  // Очистка буфера после ввода числа

    string s;  // Переменная для хранения строки
    cout << "Введите строку из " << n << " символов (содержащую точку): ";

    // Цикл проверки введенной строки
    while (true) {
        getline(cin, s);  // Ввод строки

        // Проверка длины строки
        if (s.length() != n) {
            cout << "Ошибка! Введите ровно " << n << " символов: ";
            continue;
        }

        // Проверка наличия точки в строке
        if (s.find('.') == string::npos) {
            cout << "Ошибка! Строка должна содержать точку. Повторите ввод: ";
            continue;
        }

        break;  // Выход из цикла при корректном вводе
    }

    // Находим позицию первой точки в строке
    size_t dot_pos = s.find('.');
    string result;  // Переменная для результата
    int commas_removed = 0;  // Счетчик удаленных запятых

    // Обработка строки: пропускаем запятые до первой точки
    for (size_t i = 0; i < s.length(); i++) {
        if (i < dot_pos && s[i] == ',') {  // Если запятая до точки
            commas_removed++;  // Увеличиваем счетчик
            continue;  // Пропускаем эту запятую
        }
        result += s[i];  // Добавляем символ в результат
    }

    cout << "\nИсходная строка: " << s << endl;
    cout << "Результат: " << result << endl;
    cout << "Удалено запятых: " << commas_removed << endl;
    cout << "Новая длина строки: " << result.length() << endl;

    return 0;
}
